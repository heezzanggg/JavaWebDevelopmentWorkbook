plugins {
    id 'java'
    id 'war'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    implementation 'mysql:mysql-connector-java:8.0.28'

    //lombok 라이브러리
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    //HickariCP(Connection pool의 종류) 라이브러리
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.0'

    //ModelMapper 라이브러리 : (VO <-> DTO) getter/setter등 이용해서 객체의 정보를 다른 객체로 복사하는 기능 제공
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'

    //@Log4j2 라이브러리 ->log4j2.xml 이용해서 Log4j2라이브러리 설정하기 (어펜더(Appender)나 로그레벨 설정 하는 파일)
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.2,'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl',  version: '2.17.2'

    //테스트환경에서 @Log4j2 사용
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version:'1.18.24'

    //JSTL라이브러리 추가
    implementation group: 'jstl', name: 'jstl', version: '1.2'

}

test {
    useJUnitPlatform()
}